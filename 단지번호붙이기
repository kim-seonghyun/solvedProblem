N = int(input())

graph = []


def convert1ToNone(el):
    if el == '1':
        return None
    else:
        return 0


for i in range(0, N):
    graph.append(list(input()))
    graph[i] = list(map(convert1ToNone, graph[i]))

# location 은 pair 값


xdirection = [0, 0, -1, +1]
ydirection = [+1, -1, 0, 0]


def bfs(graph, location):
    queue = []
    queue.append(location)

    count = 0
    while queue:
        currentLocation = queue.pop(0)
        x, y = map(int, currentLocation)
        for i in range(0, 4):
            nx = x + xdirection[i]
            ny = y + ydirection[i]
            if 0 <= nx < N and 0 <= ny < N:
                if graph[nx][ny] == None:
                    count += 1
                    queue.append((nx, ny))
                    graph[nx][ny] = 0
    if count == 0:
        count = 1
    return count


result = []
for i in range(N):
    for j in range(N):
        if graph[i][j] == None:
            result.append(bfs(graph, (i, j)))


result.sort()

print(len(result))
for i in result:
    print(i)
